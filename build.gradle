plugins {
  id 'war'
  id 'maven'
  id 'eclipse-wtp'
  id "com.bmuschko.cargo" version "2.4"
}


group = 'sample.webapp'
version = '0.0.1-SNAPSHOT'

description = """sample-webapp Maven Webapp"""

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {

     maven { url "http://repo.maven.apache.org/maven2" }
     maven { url "https://repository.jboss.org/nexus/content/repositories/releases/" }
}

dependencies {

    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.8.1'

    testCompile group: 'junit', name: 'junit', version:'3.8.1'

    providedCompile group: 'org.jboss.spec.javax.servlet', name: 'jboss-servlet-api_3.1_spec', version: '1.0.0.Final'
    providedCompile  group: 'org.jboss.spec.javax.faces', name: 'jboss-jsf-api_2.2_spec', version: '2.2.8'
    providedCompile  group: 'com.sun.faces', name: 'jsf-impl', version: '2.2.8-jbossorg-1'

    def cargoVersion = '1.4.5'
    cargo "org.codehaus.cargo:cargo-core-uberjar:$cargoVersion",
          "org.codehaus.cargo:cargo-ant:$cargoVersion"
}

eclipse {

    wtp {
        component {
            contextPath  = contextPath
        }
    }
}

cargo {

    containerId = cargoContainerId
    port = Integer.parseInt(cargoPort)

    deployable {
        context = contextPath
    }

    local {
        // タスク：clean assemble cargoStopLocal cargoStartLocal
        homeDir = file(localWebServerHomeDir)
        timeout = 60000
    }

    remote {
        // タスク：clean assemble cargoUndeployRemote cargoDeployRemote
        hostname = cargoHostName
        username = cargoHostUser
        password = cargoHostPassword
    }

}
