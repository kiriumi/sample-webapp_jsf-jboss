plugins {
  id 'war'
  id 'eclipse-wtp'
  id 'jacoco'
  id 'checkstyle'
  id 'pmd'
  id "com.github.spotbugs" version "4.5.0"
  id "com.bmuschko.cargo" version "2.7.1"
  id "org.flywaydb.flyway" version "6.5.5"

}

group = 'sample.webapp'
version = '0.0.1-SNAPSHOT'

description = """JSFによるWebアプリケーションのサンプル"""

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

// Javaの文字コード
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

repositories {

     mavenCentral()
     maven { url "https://plugins.gradle.org/m2/" }
     maven { url "https://repository.jboss.org/nexus/content/repositories/releases/" }
     maven { url "https://repository.primefaces.org/" }
}

dependencies {

    // JavaEE
    providedCompile group: 'javax', name: 'javaee-web-api', version: '8.0.1'

    // JavaEE（Java9以降で標準ではなくなったため、追加で指定が必要）
    implementation group: 'javax.xml.bind', name: 'jaxb-api', version: '2.3.1' //
    implementation group: 'javax.jws', name: 'javax.jws-api', version: '1.1'
    implementation group: 'javax.xml.ws', name: 'jaxws-api', version: '2.3.1'
    implementation group: 'javax.security.enterprise', name: 'javax.security.enterprise-api', version: '1.0'

    // PrimeFaces
    implementation group: 'org.primefaces', name: 'primefaces', version: '8.0'
    implementation group: 'org.primefaces.themes', name: 'all-themes', version: '1.0.10'
    implementation group: 'org.omnifaces', name: 'omnifaces', version: '3.4.1' // これがないとAjaxが正常に動作しなくなるため

    // PrimeFaces（任意のライブラリ）
    // implementation group: 'com.lowagie', name: 'itext', version: '2.1.7'
    // implementation group: 'org.apache.poi', name: 'poi', version: '4.1.1'
    // implementation group: 'com.rometools', name: 'rome', version: '1.9.0'
    implementation group: 'commons-fileupload', name: 'commons-fileupload', version: '1.3.3'
    implementation group: 'org.apache.tika', name: 'tika-core', version: '1.22'
    // implementation group: 'net.sf.barcode4j', name: 'barcode4j-light', version: '2.1'
    // implementation group: 'net.glxn', name: 'qrgen', version: '1.4'
    // implementation group: 'com.googlecode.owasp-java-html-sanitizer', name: 'owasp-java-html-sanitizer', version: '20190503.1'

    // JDBC
    implementation group: 'org.postgresql', name: 'postgresql', version: '42.2.12', changing: true
    implementation group: 'org.xerial', name: 'sqlite-jdbc', version: '3.30.1'

    // ログ
    implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.30'
    implementation group: 'org.slf4j', name: 'jul-to-slf4j', version: '1.7.30'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: '2.13.1'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.13.1'

    // DBアクセス
    implementation group: 'org.mybatis', name: 'mybatis', version: '3.4.6'
    implementation group: 'org.mybatis', name: 'mybatis-cdi', version: '1.1.1'
    implementation group: 'org.mybatis.generator', name: 'mybatis-generator-core', version: '1.4.0'
    implementation group: 'org.eclipse.persistence', name: 'org.eclipse.persistence.jpa', version: '2.7.6'
    // implementation group: 'com.github.gwenn', name: 'sqlite-dialect', version: '0.1.0' // SQLiteでHibanateによるJPAをする際、必要

    // ユーティリティ
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.8.1'
    implementation group: 'org.apache.commons', name: 'commons-text', version: '1.9'
    implementation group: 'commons-codec', name: 'commons-codec', version: '1.14'
    implementation group: 'com.byteslounge', name: 'cdi-properties', version: '1.1.1' // プロパティファイルの値をCDIで読込み（その１）
    implementation group: 'org.apache.deltaspike.core', name: 'deltaspike-core-api', version: '1.9.4' // プロパティファイルの値をCDIで読込み（その２）
    implementation group: 'org.apache.deltaspike.core', name: 'deltaspike-core-impl', version: '1.9.4'
    implementation group: 'com.google.guava', name: 'guava', version: '24.1-jre'

    // テスト
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter', version: '5.6.2'
    testImplementation group: 'org.dbunit', name: 'dbunit', version: '2.7.0'
    testImplementation group: 'org.mockito', name: 'mockito-core', version: '3.3.3'
    testImplementation group: 'com.codeborne', name: 'selenide', version: '5.11.1'

     // GradleでLombokをビルドするためには、以下のようにする
    compileOnly group: 'org.projectlombok', name: 'lombok', version: '1.18.12'
    annotationProcessor group: 'org.projectlombok', name: 'lombok', version: "1.18.12"

    def cargoVersion = '1.7.10'
    cargo "org.codehaus.cargo:cargo-core-uberjar:${cargoVersion}",
          "org.codehaus.cargo:cargo-ant:${cargoVersion}"
}

eclipse.wtp {
    component {
        deployName = contextRoot
        contextPath  = contextRoot // こちらではコンテキストパスは変わらないので注意
    }
}

cargo {

    containerId = cargoContainerId
    port = Integer.parseInt(cargoPort)

    deployable {
        // ページを表示するためのURL：http://{ホスト名}/contextPath/{ページ名}
        //   例：http://localhost:8080/SampleWebApp/login.xhtml
        context = contextRoot
    }

    local {
        // 開始タスク：clean cargoStartLocal
        // 終了タスク：cargoStopLocal
        homeDir = file(cargoLocalApServerHome)
        startStopTimeout = 60000
    }

    remote {
        // タスク：clean cargoRedeployRemote
        hostname = cargoHostName
        username = cargoHostUser
        password = cargoHostPassword
    }

}

// Flyway管理テーブルを作成するため、最初にflywayBaselineタスクを実行する
flyway {
    url = 'jdbc:postgresql://localhost:5432/postgres'
    user = 'postgres'
    password = 'postgres'
    schemas = ['public']
    locations = [ "filesystem:${projectDir}/db/migration" ] // デフォルトはsrc/main/db/migration
}

checkstyle {
    toolVersion = '8.36' // Gradleラッパーの場合、バージョン指定がないとエラーになる
    configFile = file('misc/checkstyle/google_checks.xml')
    sourceSets = [sourceSets.main]
    ignoreFailures = true
}

spotbugs {
    ignoreFailures = true
}

pmd {
    sourceSets = [sourceSets.main]
    ignoreFailures = true
}

test.finalizedBy jacocoTestReport

// 自動テストタスク：clean flywayMigrate cargoStartLocal check cargoStopLocal

sourceSets {
    main {
        java {
            // sourceSets.main.java.srcDirsプロパティに設定を追加
            // = Javaソースの配置先を設定
            srcDir 'src/common/java'
        }
    }
}



eclipse.wtp.component {
    resource sourcePath: 'src/common/webapp', deployPath: '/'
}




war {
    from 'src/common/webapp' // adds a file-set to the root of the archive
}

